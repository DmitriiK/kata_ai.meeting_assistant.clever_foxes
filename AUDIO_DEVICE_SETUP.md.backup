# TTS Translation Setup Guide üé§üåç

Complete guide for setting up Text-to-Speech translation routing to virtual microphone for use in meeting applications.

## Table of Contents

- [Overview](#overview)
- [The Problem This Solves](#the-problem-this-solves)
- [Prerequisites](#prerequisites)
- [Step 1: Install BlackHole](#step-1-install-blackhole)
- [Step 2: Configure Meeting Apps](#step-2-configure-meeting-apps)
- [Step 3: Set Up Audio Monitoring (Optional)](#step-3-set-up-audio-monitoring-optional)
- [Step 4: Test the Setup](#step-4-test-the-setup)
- [Troubleshooting](#troubleshooting)
- [Advanced Configurations](#advanced-configurations)

---

## Overview

The TTS Translation feature allows you to:
1. Speak in your native language
2. Have it automatically translated by AI
3. Convert the translation to speech (TTS)
4. Route that speech to your meeting app's microphone input
5. Your conversation partner hears the translation as if you spoke it!

**Audio Flow:**
```
Your Voice ‚Üí Meeting Assistant ‚Üí Transcription ‚Üí LLM Translation ‚Üí Azure TTS
                                                                        ‚Üì
TTS Audio ‚Üí BlackHole Output ‚Üí BlackHole Input ‚Üí Meeting App ‚Üí Peer hears it! ‚úÖ
```

---

## The Problem This Solves

**Without this setup**: TTS translation plays through your speakers. You hear it, but your conversation partner doesn't.

**With this setup**: TTS translation is routed to a virtual audio device (BlackHole) that acts as a microphone input for your meeting app. Your partner hears the translation seamlessly!

---

## Prerequisites

- **macOS** (this guide is for Mac; Windows/Linux use different virtual audio devices)
- **Meeting Assistant app** installed and configured
- **Azure Speech Service** and **Azure OpenAI** credentials configured
- **Administrator access** to install software

---

## Step 1: Install BlackHole

BlackHole is a virtual audio driver that allows audio routing between applications.

### Installation via Homebrew (Recommended):

```bash
brew install blackhole-2ch
```

### Installation via Installer:

1. Download from [BlackHole GitHub Releases](https://github.com/ExistentialAudio/BlackHole/releases)
2. Download **BlackHole2ch.vX.X.X.pkg**
3. Double-click to install
4. Follow the installation wizard

### Post-Installation:

**‚ö†Ô∏è Important**: Restart your Mac after installation for BlackHole to be properly detected.

### Verify Installation:

```bash
# List audio devices - should see BlackHole
system_profiler SPAudioDataType | grep -i blackhole
```

Or check in **Audio MIDI Setup**:
1. Open **Audio MIDI Setup** (Cmd+Space ‚Üí "Audio MIDI Setup")
2. You should see **BlackHole 2ch** in the device list

---

## Step 2: Create Aggregate Device (Mic + BlackHole)

**This is REQUIRED for using both your voice and TTS translations!**

1. Open **Audio MIDI Setup** (Cmd+Space ‚Üí "Audio MIDI Setup")
2. Click **"+"** button ‚Üí **"Create Aggregate Device"**
3. Check both:
   - ‚òëÔ∏è **Your Real Microphone** (MacBook Pro Microphone, etc.)
   - ‚òëÔ∏è **BlackHole 2ch**
4. Select your real microphone ‚Üí Check **"Drift Correction"**
5. Rename to "Mic + BlackHole" (optional but helpful)

**Why?** This combines your real voice with TTS audio into one input device.

## Step 3: Create Multi-Output Device (BlackHole + Speakers)

**This lets you HEAR the TTS translations yourself!**

1. In **Audio MIDI Setup**, click **"+"** ‚Üí **"Create Multi-Output Device"**
2. Check both:
   - ‚òëÔ∏è **BlackHole 2ch**
   - ‚òëÔ∏è **Your Speakers/Headphones**
3. Select BlackHole ‚Üí Check **"Drift Correction"**
4. Rename to "BlackHole + Speakers" (optional)
5. Right-click ‚Üí **"Use This Device For Sound Output"**

**Why?** TTS audio goes to both BlackHole (for meeting) and your speakers (so you hear it).

## Step 4: Configure Meeting Apps

Configure your meeting/voice application to use the **Aggregate Device** as its microphone input.

### Desktop Applications

#### Telegram Desktop

1. Open **Telegram Desktop**
2. Go to the **Calls** tab in the sidebar (phone icon)
3. Click the **three dots** (‚ãÆ) menu
4. Select **"Call Settings"**
5. Under **"Microphone"**, select **"Mic + BlackHole"** (the Aggregate Device you created)
6. Keep **Speakers/Output** as your regular speakers/headphones

**Alternative path** (if available in your version):
- **Settings** ‚Üí **Advanced** ‚Üí **Voice and Video** ‚Üí **Input Device**

**Important**: Use the **Aggregate Device** (Mic + BlackHole), NOT BlackHole alone!

#### Zoom

1. Open **Zoom**
2. Click the **gear icon** (Settings)
3. Go to **Audio** section
4. Under **"Microphone"**, select **"Mic + BlackHole"** (Aggregate Device) from dropdown
5. Keep **"Speaker"** as your regular output device
6. Test with **"Test Mic"** button - you should see levels when speaking AND when TTS plays

#### Microsoft Teams

1. Open **Microsoft Teams**
2. Click your **profile picture** (top right) ‚Üí **Settings**
3. Go to **Devices** section
4. Under **"Audio devices"** ‚Üí **"Microphone"**, select **"BlackHole 2ch"**
5. Keep **"Speakers"** as your regular speakers
6. Test with **"Make a test call"**

#### Discord

1. Open **Discord**
2. Click the **gear icon** (User Settings) at bottom left
3. Go to **Voice & Video** section
4. Under **"Input Device"**, select **"BlackHole 2ch"**
5. Keep **"Output Device"** as your regular speakers
6. Test with **"Let's Check"** button

#### Slack

1. Open **Slack**
2. Go to **Preferences** ‚Üí **Audio & Video**
3. Under **"Microphone"**, select **"BlackHole 2ch"**
4. Keep **Speaker** as your regular output

#### WhatsApp Desktop

WhatsApp uses the **system default microphone**:

1. Open **System Settings** (or System Preferences)
2. Go to **Sound**
3. Click **Input** tab
4. Select **"BlackHole 2ch"** from the list

**Note**: This changes the system-wide default. Change it back after use, or use per-app audio routing tools.

### Browser-Based Applications

For browser-based meeting apps (Google Meet, Zoom web, Teams web, Discord web, etc.):

#### Method 1: In-Meeting Controls (Easiest)

Most web apps let you change microphone during the call:

**Google Meet:**
- Click **three dots** (‚ãÆ) ‚Üí **Settings** ‚Üí **Audio**
- Change **Microphone** to **"BlackHole 2ch"**

**Zoom (web):**
- Click **^ arrow** next to microphone icon
- Select **"BlackHole 2ch"**

**Microsoft Teams (web):**
- Click **...** (More actions) ‚Üí **Device settings**
- Change **Microphone** to **"BlackHole 2ch"**

**Discord (web):**
- Click **gear icon** ‚Üí **Voice & Video**
- Select **"BlackHole 2ch"** under **Input Device**

#### Method 2: Browser Permissions

**Google Chrome / Brave / Edge:**
1. Go to **Settings** ‚Üí **Privacy and security** ‚Üí **Site settings**
2. Click **Microphone**
3. Select **"BlackHole 2ch"** from dropdown at top
4. Or find specific site and change its microphone setting

**Safari:**
1. **Safari** ‚Üí **Settings** ‚Üí **Websites** tab
2. Select **Microphone** from left sidebar
3. For each site, change dropdown to **"BlackHole 2ch"**

**Firefox:**
1. **Settings** ‚Üí **Privacy & Security** ‚Üí **Permissions**
2. Click **Settings** next to **Microphone**
3. Select **"BlackHole 2ch"** as default

#### Method 3: Quick Access (Address Bar)

When on a meeting page:
1. Click the **camera/microphone icon** in the address bar
2. Change microphone to **"BlackHole 2ch"**
3. Reload page if needed

#### Testing in Browser:

Test if browser can capture from BlackHole:
1. Go to: https://www.onlinemictest.com/
2. Allow microphone access
3. Select **"BlackHole 2ch"**
4. Play TTS in Meeting Assistant
5. Audio level bars should move! ‚úÖ

---

## Step 5: Verify Setup

Check that everything is configured correctly:

1. **System Output**: Should be "BlackHole + Speakers" (Multi-Output Device)
   - Check: System Settings ‚Üí Sound ‚Üí Output
   
2. **Meeting App Input**: Should be "Mic + BlackHole" (Aggregate Device)
   - Check: Telegram ‚Üí Calls ‚Üí ‚ãÆ ‚Üí Call Settings ‚Üí Microphone

3. **Meeting App Output**: Should be your regular speakers
   - Check: Same location, Speakers/Output dropdown

### What Each Device Does:

**Aggregate Device (Mic + BlackHole)**:
- ‚úÖ Combines your real mic + BlackHole input
- ‚úÖ Used AS: Meeting app microphone input
- ‚úÖ Result: Peer hears your voice + TTS

**Multi-Output Device (BlackHole + Speakers)**:
- ‚úÖ Splits TTS audio to two destinations
- ‚úÖ Used AS: System sound output
- ‚úÖ Result: You hear TTS + it goes to BlackHole

---

## Step 6: Test the Setup

### Quick Test

1. **Start Meeting Assistant**:
   ```bash
   cd /path/to/meeting_assistant
   uv run python gui_app.py
   ```

2. **Enable Translation**:
   - Check ‚òëÔ∏è **"Enable TTS to Microphone"**
   - Select target language (e.g., "Russian", "English", "Turkish")

3. **Start a Test Call**:
   - Use Zoom's **"Test Speaker & Microphone"** feature
   - OR join a call with a friend/colleague
   - OR use https://www.onlinemictest.com/

4. **Speak and Test**:
   - Speak into your **real microphone**
   - Wait for: Transcription ‚Üí Translation ‚Üí "Generating..."
   - Button should change to **"Speak to Mic"** (enabled, green)

5. **Play Translation**:
   - Click **"Speak to Mic"**
   - Your peer should hear the translation!
   - If using Multi-Output, YOU should hear it too

6. **Verify**:
   - Ask your peer: "Did you hear that?"
   - Check audio levels in meeting app
   - Confirm language is correct

### Full Workflow Test

**Scenario**: English ‚Üí Russian translation in Zoom

1. ‚úÖ BlackHole installed and visible in Audio MIDI Setup
2. ‚úÖ Zoom microphone set to "BlackHole 2ch"
3. ‚úÖ Multi-Output Device created and set as system output
4. ‚úÖ Meeting Assistant running with translation enabled
5. ‚úÖ Language set to "Russian"
6. ‚úÖ Speak: "Hello, how are you today?"
7. ‚úÖ Wait for transcription and translation
8. ‚úÖ Click "Speak to Mic"
9. ‚úÖ Peer hears: "–ü—Ä–∏–≤–µ—Ç, –∫–∞–∫ –¥–µ–ª–∞ —Å–µ–≥–æ–¥–Ω—è?"
10. ‚úÖ Success! üéâ

---

## Troubleshooting

### Peer Doesn't Hear Translation

**Check meeting app microphone:**
```bash
# Verify BlackHole is available
system_profiler SPAudioDataType | grep -i blackhole
```

‚úÖ Restart meeting app after changing audio device  
‚úÖ Check meeting app isn't on mute  
‚úÖ Verify BlackHole selected in app settings (not system default)  
‚úÖ Test with Zoom's "Test Microphone" feature  
‚úÖ Try rejoining the call  

### You Don't Hear Translation

This is **normal** if you haven't set up Multi-Output Device!

‚úÖ Create Multi-Output Device (see Step 3)  
‚úÖ Set Multi-Output as system output  
‚úÖ Check speaker volume isn't muted  
‚úÖ Verify your speakers are included in Multi-Output  
‚úÖ Enable "Drift Correction" on BlackHole  

### Meeting Assistant Can't Find BlackHole

```bash
# List all audio devices
python -c "
import pyaudio
p = pyaudio.PyAudio()
for i in range(p.get_device_count()):
    info = p.get_device_info_by_index(i)
    if info['maxOutputChannels'] > 0:
        print(f'[{i}] {info[\"name\"]} - Out:{info[\"maxOutputChannels\"]}')
p.terminate()
"
```

If BlackHole not listed:
‚úÖ Reinstall BlackHole: `brew reinstall blackhole-2ch`  
‚úÖ Restart Mac  
‚úÖ Check **System Settings** ‚Üí **Privacy & Security** ‚Üí **Microphone**  
‚úÖ Restart Meeting Assistant app  

### Audio is Choppy or Distorted

‚úÖ Enable **"Drift Correction"** on BlackHole in Multi-Output  
‚úÖ Close other audio-intensive apps  
‚úÖ Check CPU usage (Activity Monitor)  
‚úÖ Increase buffer size:
   - Edit `tts_audio_router.py`, line 110
   - Change `frames_per_buffer=1024` to `frames_per_buffer=2048`

### Other System Sounds Go to Meeting

If Multi-Output is system default, ALL sounds go to BlackHole:

**Solution 1**: Only set Multi-Output as default DURING meetings  
**Solution 2**: Keep regular speakers as default, accept you won't hear translation  
**Solution 3**: Use per-app audio routing (SoundSource, Audio Hijack)  

### Translation Not Generating

‚úÖ Check Azure OpenAI credentials in `.env`  
‚úÖ Verify internet connection  
‚úÖ Look for errors in terminal output  
‚úÖ Check Azure OpenAI quota/limits  
‚úÖ Ensure language is selected in dropdown  

### Browser Doesn't Show BlackHole

‚úÖ Grant browser microphone permission in **System Settings**  
‚úÖ Reload the web page after changing settings  
‚úÖ Clear browser cache and cookies  
‚úÖ Try a different browser  
‚úÖ Check browser's site permissions for the specific site  

---

## Advanced Configurations

### Using Both Your Voice AND Translation (RECOMMENDED SETUP)

To hear your peer AND have them hear both your voice and translations, you need TWO things:

#### 1. Create Aggregate Device (for INPUT - combines your mic + BlackHole)

1. Open **Audio MIDI Setup** (Cmd+Space ‚Üí "Audio MIDI Setup")
2. Click **"+"** button (bottom left) ‚Üí **"Create Aggregate Device"**
3. **Check both boxes:**
   - ‚òëÔ∏è **Your Real Microphone** (e.g., "MacBook Pro Microphone", "External Microphone")
   - ‚òëÔ∏è **BlackHole 2ch**
4. **Important**: Select **your real microphone** in the list ‚Üí Check **"Drift Correction"**
5. **(Optional)** Rename it: Right-click ‚Üí "Rename" ‚Üí "Mic + BlackHole"
6. **Set this as Telegram's microphone input**

#### 2. Create Multi-Output Device (for OUTPUT - so you hear TTS yourself)

1. In **Audio MIDI Setup**, click **"+"** ‚Üí **"Create Multi-Output Device"**
2. **Check both boxes:**
   - ‚òëÔ∏è **BlackHole 2ch**
   - ‚òëÔ∏è **Your Speakers/Headphones** (e.g., "MacBook Pro Speakers", "AirPods")
3. Select **BlackHole 2ch** in the list ‚Üí Check **"Drift Correction"**
4. **(Optional)** Rename: Right-click ‚Üí "Rename" ‚Üí "BlackHole + Speakers"
5. **Set this as your system output**: Right-click ‚Üí "Use This Device For Sound Output"

#### Result:

**Audio Flow:**
```
Your Voice ‚Üí Real Mic ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
                              ‚îú‚Üí Aggregate Device ‚Üí Telegram ‚Üí Peer hears you ‚úÖ
TTS Audio ‚Üí BlackHole ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
            ‚Üì
            Multi-Output splits to:
            ‚îú‚Üí BlackHole Input (captured by Aggregate)
            ‚îî‚Üí Your Speakers (you hear it) ‚úÖ
```

**What you get:**
- ‚úÖ Your voice goes to meeting (via real mic in Aggregate)
- ‚úÖ TTS goes to meeting (via BlackHole in Aggregate)
- ‚úÖ You hear TTS (via Multi-Output to speakers)
- ‚úÖ You hear your peer (Telegram outputs to your speakers normally)
- ‚úÖ Peer hears everything (your voice + TTS)

### Using Different Virtual Devices

To use SoundFlower, Loopback, or other virtual devices:

Edit `translation_tts_controller.py`, line 15:
```python
def __init__(self, virtual_device_name: str = "YourDeviceName"):
```

Or edit `tts_audio_router.py`, line 11:
```python
def __init__(self, virtual_device_name: str = "YourDeviceName"):
```

Device name matching is case-insensitive and partial (e.g., "loopback" will match "Loopback Audio").

### Per-App Audio Routing (Professionals)

**SoundSource** ($39): https://rogueamoeba.com/soundsource/
- Route specific apps to specific devices
- No need to change system defaults
- Monitor and control all audio per-app

**Audio Hijack** ($64): https://rogueamoeba.com/audiohijack/
- Advanced audio routing and recording
- Built-in audio effects
- Professional broadcast workflows

### Monitoring BlackHole with Loopback

If you have **Loopback** (by Rogue Amoeba):
1. Create a new device
2. Add **BlackHole 2ch** as source
3. Add **Your Speakers** as monitor output
4. More flexible than Multi-Output Device

---

## Summary

‚úÖ **Installed**: BlackHole 2ch virtual audio device  
‚úÖ **Configured**: Meeting app uses BlackHole as microphone  
‚úÖ **Optional**: Multi-Output Device for self-monitoring  
‚úÖ **Tested**: Translation audio routes to meeting app  
‚úÖ **Result**: Real-time multilingual communication! üåçü¶ä

---

## Support & Resources

**BlackHole Documentation**: https://github.com/ExistentialAudio/BlackHole/wiki  
**Meeting Assistant README**: [README.md](README.md)  
**macOS Audio MIDI Setup Guide**: https://support.apple.com/guide/audio-midi-setup/  

**Questions?** Check the main [README.md](README.md) troubleshooting section or review terminal output for error messages.

---

**Happy Translating! üé§üåç**
